FORMAT: 1A
HOST: http://sit4.boots.com/

# Integated Forms outcome postback
Integrated Webforms forms (Clinic and PMed Forms) will need to communicate the
outcome of the Webforms logic to WCS uppon form submission.

This document describes the, IBM developed, WCS webservice that will consume 
the Webforms postbacks that are generated when a pharmacy customer completes
the filling out of a Webform.

This documentation can originally be found under the following URL: http://docs.wcsformoutcomes.apiary.io/

## Data Structures

### UUID (string)
A plain old UUID.
Eg: da1eab5c-9995-42a1-8393-9b2bbe96c9b0

### Outcome (enum[number])

+ 0 - Value 0 The form logic determined an `accepted` state.
+ 1 - The customer is `rejected` based on the form's logic.
+ 2 - The customer is `refered` to an IMA review.
+ 3 - The customer either Canceled the yourney (PMeds) or has selected "I disagree" to the agreement question (Clinics).

### PMed Context (object)

+ storeId: 54321 (optional, number)
+ catalogId: 12345 (optional, number)
+ catentryId: 1 (optional, number)
+ userId: `5d87720f-b8e8-4517-aea1-aea5b09bebf6` (optional)
+ quantity: 42 (optional, number)
+ returnURL: `http://boots.com/basket?more=URL&stuff` (optional)
+ cancelURL: `http://google.com` (optional)
+ formId: 3142 (optional, number)

### Submission (object)

- clinicSessionID: `d66b73d1-a67e-4d76-afac-69f3486624de` (required, UUID) - The session ID given by WCS
- submissionID: `da1eab5c-9995-42a1-8393-9b2bbe96c9b0` (required, nullable, UUID) - The Webforms Analytics record ID leading to the data submitted via the Webform.
- outcome: (optional, Outcome) 0 - The outcome computed based on the submitted data.
- progressBarSegments: 8 (optional, number) - the total number of progressbar segments Webforms rendered.
- context: (optional, PMed Context) - The `window.wcs.pmed.context` or `window.wcs.clinic.context` Javascript object of the customer's browser runtime is passed back to wcs via this attribute.


### Submission Bad (Submission)

- clinicSessionID (optional, nullable) - This bad submission does not provide a Session ID for Clinics
- submissionID (optional, nullable) - The Webforms Analytics record ID leading to the data submitted via the Webform.

### Submission Cancel (Submission)

- submissionID (required, nullable) - The Webforms Analytics record ID leading to the data submitted via the Webform.
- outcome: 3 (optional, number)

### WCS Response (object)

+ location: http://google.com (optional, string) - The location to redirect the customer's user agent. This way WCS can return a URL where the customer journey continues.

### Error

+ errorCode: 42 (required,number) - an identifier for a formal error.
+ errorMessage: Something went wrong.` (required, string) - an error message aimed at a non technical user.
+ errorLog: (optional, fixed, array[string]) - an array of technical error messages to be also logged by the consuming application (Webforms).


## PH form status servlet [/webapp/servlet/PHFormStatus]
### Post a new Clinic or PMeds form outcome  [POST]
Available under `/webapp/servlet/PHFormStatus`.

In order to post a form outcome just HTTP POST the outcome with the session 
UUID to the PHFormStatus endpoint. The expected payload is a JSON encoded 
object.  

For PMed forms just rename the attribute `clinicSessionID` to `pmedSessionID`.

+ Request (application/json)
    This is the payload that Webforms will deliver to WCS uppon a Webform form submission.
    
    Note: Webforms will do no processing at all to the contents of the _`context`_ element
    
    + Attributes (Submission)

+ Response 201 (application/json)
    The expected success response. This means WCS has processed the above request and the user can now be navigated away from the Webform to some WCS controlled page.

    + Attributes (WCS Response)

+ Request (application/json)
    This is an example for a bad request. This request should trigger an error.
    
    + Attributes (Submission Bad)

+ Response 400 (application/json)
    Something went wrong. The Customer must be notified about this as do the Webforms operators.
    
    + Attributes (array[Error], fixed)
        + (Error)
            + errorCode: 100 (number)
            + errorMessage: `Something very technical went wrong!`
            + errorLog: `First log`, `Second log! (maybe the first line of a stack trace?)` (array[string])
                
    + Schema
    
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "array",
                "items": [{
                    "type": "object",
                    "properties": {
                        "errorCode": {
                            "type": "integer",
                        },
                        "errorMessage": {
                            "type": "string",
                        },
                        "errorLog": {
                            "type": "array",
                            "items": [{
                              "type": "string",
                            }]
                        }
                  }
                }],
            }


    
+ Request (application/json)
    This is the payload that Webforms will deliver to WCS with a _`cancel`_ outcome. It is largely similar to the success scenario with the only difference being that the `outcome` parameter is always `3` and the `submissionID` is always `null`
    
    Note: Webforms will do no processing at all to the contents of the _`context`_ element
    
    + Attributes (Submission Cancel)

+ Response 201 (application/json)
    Webforms requires WCS to issue a redirection location in this case.

    + Attributes (WCS Response)
    
## Resource to test error handling [/this/url/will/not/exist/in/the/implementation/errors]
### POST
This ressource will always return an error. It is only meant for deveopment work do not to access this resource on implementations.
The specific scenario here is that Webforms submitts a Badly formed message to the WCS Webservice.

+ Request (application/json)
    This is an example for a bad request. This request should trigger an error.
    
    + Attributes (Submission Bad)

+ Response 400 (application/json)
    Something went wrong. The Customer must be notified about this as do the Webforms operators.
    
    + Attributes (array[Error], fixed)
        + (Error)
            + errorCode: 100 (number)
            + errorMessage: `Something very technical went wrong!`
            + errorLog: `First log`, `Second log! (maybe the first line of a stack trace?)` (array[string])
                
    + Schema
    
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "array",
                "items": [{
                    "type": "object",
                    "properties": {
                        "errorCode": {
                            "type": "integer",
                        },
                        "errorMessage": {
                            "type": "string",
                        },
                        "errorLog": {
                            "type": "array",
                            "items": [{
                              "type": "string",
                            }]
                        }
                  }
                }],
            }